{"version":3,"sources":["../../../spec/browser/exceljs.spec.js"],"names":["require","ExcelJS","unexpectedError","done","error","console","message","stack","expect","toEqual","describe","it","wb","Workbook","ws","addWorksheet","getCell","value","xlsx","writeBuffer","then","buffer","wb2","load","ws2","getWorksheet","toBeTruthy","options","base64","toString","csv"],"mappings":"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","sourcesContent":["'use strict';\n\nrequire('babel-polyfill');\nconst ExcelJS = require('../../lib/exceljs.browser');\n\nfunction unexpectedError(done) {\n  return function(error) {\n    // eslint-disable-next-line no-console\n    console.error('Error Caught', error.message, error.stack);\n    expect(true).toEqual(false);\n    done();\n  };\n}\n\ndescribe('ExcelJS', () => {\n  it('should read and write xlsx via binary buffer', done => {\n    const wb = new ExcelJS.Workbook();\n    const ws = wb.addWorksheet('blort');\n\n    ws.getCell('A1').value = 'Hello, World!';\n    ws.getCell('A2').value = 7;\n\n    wb.xlsx\n      .writeBuffer()\n      .then(buffer => {\n        const wb2 = new ExcelJS.Workbook();\n        return wb2.xlsx.load(buffer).then(() => {\n          const ws2 = wb2.getWorksheet('blort');\n          expect(ws2).toBeTruthy();\n\n          expect(ws2.getCell('A1').value).toEqual('Hello, World!');\n          expect(ws2.getCell('A2').value).toEqual(7);\n          done();\n        });\n      })\n      .catch(error => {\n        throw error;\n      })\n      .catch(unexpectedError(done));\n  });\n  it('should read and write xlsx via base64 buffer', done => {\n    const options = {\n      base64: true,\n    };\n    const wb = new ExcelJS.Workbook();\n    const ws = wb.addWorksheet('blort');\n\n    ws.getCell('A1').value = 'Hello, World!';\n    ws.getCell('A2').value = 7;\n\n    wb.xlsx\n      .writeBuffer(options)\n      .then(buffer => {\n        const wb2 = new ExcelJS.Workbook();\n        return wb2.xlsx.load(buffer.toString('base64'), options).then(() => {\n          const ws2 = wb2.getWorksheet('blort');\n          expect(ws2).toBeTruthy();\n\n          expect(ws2.getCell('A1').value).toEqual('Hello, World!');\n          expect(ws2.getCell('A2').value).toEqual(7);\n          done();\n        });\n      })\n      .catch(error => {\n        throw error;\n      })\n      .catch(unexpectedError(done));\n  });\n  it('should write csv via buffer', done => {\n    const wb = new ExcelJS.Workbook();\n    const ws = wb.addWorksheet('blort');\n\n    ws.getCell('A1').value = 'Hello, World!';\n    ws.getCell('B1').value = 'What time is it?';\n    ws.getCell('A2').value = 7;\n    ws.getCell('B2').value = '12pm';\n\n    wb.csv\n      .writeBuffer()\n      .then(buffer => {\n        expect(buffer.toString()).toEqual(\n          '\"Hello, World!\",What time is it?\\n7,12pm'\n        );\n        done();\n      })\n      .catch(error => {\n        throw error;\n      })\n      .catch(unexpectedError(done));\n  });\n});\n"],"file":"exceljs.spec.js"}